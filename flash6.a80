	DEVICE 	ZXSPECTRUM48

;LMN128 - eLeMeNt ZX_v2 - FLASH utility   
;16KB size of flash block 
;███████████████ V A R I A B L E S ██████████████████████████████████████		
DMA 		equ #0B
ULA			equ #FE
ZXi_port0	equ #783B
ZXi_port1	equ #793B
ZXi_port2	equ #7A3B
ZXi_port3	equ #7B3B
ZXi_port4	equ #7C3B
ZXi_port5	equ #7D3B
ZXi_port6	equ #7E3B
ZXi_port7	equ #7F3B

g_ZXi_port0	equ #7C3B
g_ZXi_port1	equ #7D3B

CodeStart	equ #0000
;███████████████ M A I N  C O D E ███████████████████████████████████████	
	
         org  25000
maincode          
start         
         jr 1F
area    db 0   //0-normal; skip presskey and use 1-4 area of FLASH         
direct  db 0   //0-normal; skip presskey and use 1-9 block
finish  db 0   //0-normal; 1-skip any key to finish 


1         di
// skip keyboard test and direct select ROM
//direct   ld a,#00
//         push af

/*         ld bc,#7ffd
         in a, (c)
         set 4,a
         out (c),a
         
         ld bc,#1ffd
         in a, (c)
         set 2,a
         out (c),a*/

        ld bc,ZXi_port0			//ZXi portselect
        ld a,#00        		//Machine
        out (c),a
        ld bc,ZXi_port1	
        ld a,#00			//ZX48
        out (c),a

        ld bc,ZXi_port0			//ZXi portselect
        ld a,#30			//CPU speed
        out (c),a
        ld bc,ZXi_port1	
        ld a,#01			//7 MHz	
        out (c),a

        
         ld   a,6
         out  (254),a
         call T_START

         ld   hl,TEXT1
         ld   bc,#0202
         call T42_TEXT
         ld   hl,FW1
         ld   bc,#021E
         call T42_TEXT         
         ld   hl,TEXT2
         ld   bc,#0307
         call T42_TEXT
//       ld   hl,TEXT12
//       ld   bc,#0501
//       call T42_TEXT
        ld   bc,#0501
        ld a,(area)
        or a
        jr nz,skiparea
        ld   hl,TEXT14        
        call T42_TEXT
;test klavesnice
         call ANYKEY
         cp   "0"
         jp   c,END0
         cp   "4"       ;0-3 range
         jp   c,2F
         jp END0
skiparea
        dec a
        add  "0"
2       push af
        ld   hl,TEXT15
        call T42_TEXT
        pop af
        push af
        call T42
        
        ld bc,ZXi_port0			//ZXi portselect
        ld a,#0F        		//Area
        out (c),a
        ld bc,ZXi_port1	
        pop af
        sub  "0"			//Area
        out (c),a
 
//Block select
        ld   bc,#0601   
        ld a,(direct)
        or a
        jr nz,skippresskey


/*        ld   hl,TEXT13
        ld   bc,#0601*/
        ld   hl,TEXT3    
        call T42_TEXT
       

;test klavesnice
         call ANYKEY
         cp   "0"
         jp   c,END0
         cp   "8"       ;0-7 range
         jp   c,range09
         jp END0
skippresskey
/*        push af
        call ANYKEY
        pop af */
        dec a

        add  "0"
                        
;vypocet bloku a modifikace ;0-7 range
range09  push af
         sub  "0"

         sla  a
         ld   (BLOCK+1),a
         ld   hl,TEXT10
 //        ld   bc,#0801
         call T42_TEXT
         pop  af
 //        ld   bc,#0807
         call T42
;ZXi dissable MB03+ machines
        ld a,#00
        ld bc,#703B
        out (c),a
        ld bc,#713B
        in a,(c)         //remember machine
        push af
        ld a,#00	 //HW - 00 - no machine
	out (c),a

;ZXi enable flash
        ld a,#01
        ld bc,#783B
        out (c),a
		
        ld bc,#793B
        in a,(c)         //remember machine
        push af
        ld a,#FF	 //HW - FF - Flash firmware
	out (c),a

;Ultimator enable flash
        xor a
        ld bc,g_ZXi_port0
        out (c),a
        inc b
        inc a
        out (c),a  //select 1 - internal device - eLeMeNt ZX

        ld a,%01100011   //enable flash and write area0 and 1
        out (#53),a
/*
        xor a
        out (#27),a      ;high byte of Page in Area0 #0000-#1FFF
        out (#67),a      ;high byte of Page in Area1
BLOCK   ld a,0           ;page 0+ Area0
        out (#07),a
        inc a            ;page 1+ Area1
        out (#47),a
*/        
        
;erase sectors (4KWord sector) 4 sectors to erase
        ld   hl,TEXT11
        ld   bc,#0901
        call T42_TEXT

        ld b,#04        ;4 sector to erase
        ld de,#0000
1       call ROM1
        ld hl,#1555     ;#5555 is over of range 16KB, it must be switched
        ld a,#AA
        ld (hl),a
        call ROM0
        ld hl,#2AAA
        ld a,#55
        ld (hl),a
        call ROM1       
        ld hl,#1555
        ld a,#80
        ld (hl),a
        ld a,#AA
        ld (hl),a
        call ROM0 
        ld hl,#2AAA
        ld a,#55
        ld (hl),a
        call PAGEX
        ld a,#30
        ld (de),a
2       ld a,(de)
        rlca
        jr nc,2B        ;Data# Polling (DQ7) 0-erase is in progress, 1-end of erase
        ld a,16         ;add 4K
        add a,d
        ld d,a        
        djnz 1B

;BAR init
        ld   a,1       
        ld   hl,#0B05
        call BARINIT
;text        
        ld   hl,TEXT4
        ld   bc,#0A01
        call T42_TEXT
;byte program
        ld de,#8000     ; from (ZX RAM)
        ld hl,#0000     ; to (flash)    
1       call ROM1
        ld bc,#1555
        ld a,#AA
        ld (bc),a
        call ROM0
        ld bc,#2AAA
        ld a,#55
        ld (bc),a
        call ROM1
        ld bc,#1555
        ld a,#A0
        ld (bc),a
    
        call PAGEX
        ld a,(de)       ;read from ZX RAM
        ld (hl),a       ;write to FLASH  
                       
2       cp (hl)
        jr nz,2B        ;Data# Polling (DQ7) for program is different and use complement DQ7 bit, 10uS is maximum write time (cca 40T states), slower but more easy is test reading writed data
        inc hl
        inc de
        ld a,l
        and 127         ;show BAR every 128 bytes
        call z,BAR
        ld a,h
        cp #40          ;end of 16KB
        jr nz,1B

        ld   hl,TEXT5
        ld   bc,#0A01
        call T42_TEXT
;verify
         ld   hl,TEXT6
         ld   bc,#1001
         call T42_TEXT
         ld   a,1
         ld   hl,#1105
         call BARINIT

         ld   hl,0         ;reset of errors counter
         ld   (ERR+2),hl
         ld   hl,32768
         call VERIFY

         ld   bc,#1023
         ld   hl,(ERR+2)
         ld   a,h
         or   l
         jr   z,END2
         call NUMBER4
         ld   hl,TEXT7
         ld   bc,#1001
         call T42_TEXT
         jr   END1

END2     ld   hl,TEXT9
         ld   bc,#1001
         call T42_TEXT
         
        pop af
        ld bc,#793B
        out (c),a       //eLeMeNt - back to previous machine

        ld a,(finish)
        or a
        jr nz,1F
END1    ld   hl,TEXT8
        ld   bc,#160A
        call T42_TEXT

        call ANYKEY
1        

        
        ld a,#00
        ld bc,#703B
        out (c),a
        pop af
        ld bc,#713B
        out (c),a       //MB03+ - back to previous machine

END0    ei
        ret        

;------------------------------
VERIFY   ld   de,0
         ld   bc,16384/128
VER1
         push bc
         ld   bc,#8000
VER2     ld   a,(de)
         cp   (hl)
         call nz,ERR
         inc  hl
         inc  de
         djnz VER2
         xor  a
         or   c
         ld   a,31
         jr   z,SKOK
         ld   a,"!"

SKOK     ld   (ZNAK+1),a
         call BAR

         pop  bc
         dec  bc
         ld   a,b
         or   c
         jr   nz,VER1
         ret

ERR      exx
         ld   hl,0
         inc  hl
         ld   (ERR+2),hl
         exx
         inc  c
         ret

;showing of BAR        
BARINIT
         ld   (COUNTER+1),a
         ld   (COUNT_I+1),a
         ld   (COUNT_P+1),hl
         ld   a,l
         ld   (COUNT_P1+1),a
         ld   a,31
         ld   (ZNAK+1),a

         ret

BAR      push af
         push bc
         push de
         push hl


COUNTER  ld   a,0
         dec  a
         ld   (COUNTER+1),a
         jr   nz,BAR_END
COUNT_I  ld   a,0
         ld   (COUNTER+1),a
COUNT_P  ld   bc,0
ZNAK     ld   a,31
         push bc
         call T42
         pop  hl
         inc  l
         ld   a,37
         cp   l
         jr   nz,BAR_1
         inc  h
COUNT_P1 ld   l,5

BAR_1    ld   (COUNT_P+1),hl

BAR_END  pop  hl
         pop  de
         pop  bc
         pop  af
         ret

;------------------------------
T_X      equ  0
T_Y      equ  0
T_XLEN   equ  31
T_YLEN   equ  24
T_ATTR1  equ  112+8
T_ATTR2  equ  104+8
T_ATTR3  equ  70
;------------------------------
T_START
T_ATTR   ld   b,T_Y+1
         ld   de,32
         ld   hl,22528+T_X-32
T_COL1   add  hl,de
         djnz T_COL1
         ld   bc,T_XLEN
         ld   d,h
         ld   e,l
         inc  de
         ld   (hl),T_ATTR1
         push hl
         push bc
         ldir
         pop  bc
         pop  hl
         dec  bc
         ld   a,T_YLEN
         dec  a
         ld   de,32
         add  hl,de
T_COL2   push hl
         push bc
         push de
         ld   (hl),T_ATTR2
         ld   d,h
         ld   e,l
         inc  de
         ldir
         ex   de,hl
         ld   (hl),T_ATTR1
         pop  de
         pop  bc
         pop  hl
         add  hl,de
         dec  a
         jr   nz,T_COL2

T_CARY
         ld   b,T_Y
         ld   c,T_X
         ld   hl,T_HELP1
         push bc
         call  T_ONE
         pop  bc
         inc  b
         ld   hl,T_HELP2
         push bc
         call T_ONE
         pop  bc
         inc  b
         ld   a,T_YLEN
         sub  3
T_CAR1   ld   hl,T_HELP3
         push bc
         push af
         call T_ONE
         pop  af
         pop  bc
         inc  b
         dec  a
         jr   nz,T_CAR1
         ld   hl,T_HELP4

T_ONE    ld   a,(hl)
         push hl
         push bc
         call T_ZNAK
         pop  bc
         pop  hl
         inc  c
         inc  hl
         ld   d,T_XLEN-1
         ld   e,(hl)
         push hl
T_CYKL   push bc
         push de
         ld   a,e
         call T_ZNAK
         pop  de
         pop  bc
         inc  c
         dec  d
         jr   nz,T_CYKL
         pop  hl
         inc  hl
         ld   a,(hl)

T_ZNAK   ld   h,0
         ld   l,a
         ld   de,T_0
         add  hl,hl
         add  hl,hl
         add  hl,hl
         add  hl,de
         ld   a,b
         rrca
         rrca
         rrca
         and  #E0
         add  a,c
         ld   e,a
         ld   a,b
         and  #18
         or   #40
         ld   d,a
         ld   b,8
T_ZNA1   ld   a,(hl)
         ld   (de),a
         inc  hl
         inc  d
         djnz T_ZNA1
         ret

T_HELP1  defb 0,1,2
T_HELP2  defb 3,10,6
T_HELP3  defb 3,10,4
T_HELP4  defb 5,9,7

T_0      defb 255
         defb 129
         defb 129
         defb 189
         defb 189
         defb 129
         defb 129
         defb 255
T_1      defb 255
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 255
T_2      defb 255
         defb 129
         defb %10111001
         defb %10111001
         defb %10011101
         defb %10011101
         defb 129
         defb 255
T_3      defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 128
T_4      defb 129
         defb 129
         defb 129
         defb 129
         defb 129
         defb 129
         defb 129
         defb 129
T_5      defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 128
         defb 255
T_6      defb 255
         defb 129
         defb 153
         defb 189
         defb 153
         defb 153
         defb 129
         defb 255
T_7      defb 255
         defb 129
         defb 153
         defb 153
         defb 189
         defb 153
         defb 129
         defb 255
T_8      defb 255
         defb 129
         defb 129
         defb 153
         defb 153
         defb 129
         defb 129
         defb 255
T_9      defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 255
T_10     defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
         defb 0
;------------------------------
;TISK CISLA BC-POZICE HL-HODNOT
;TISKNE CISLO TYPU INTEGER
;STAR-RUTINA TISKU 1 ZNAKU NA
;POZICI BC (0,0)
NUMBER4  ld   de,-10000
         call NUM_JED
NUMBER3  ld   de,-1000
         call NUM_JED
NUMBER2  ld   de,-100
         call NUM_JED
NUMBER1  ld   de,-10
         call NUM_JED
NUMBER0  ld   a,l
         add  a,48
         jp   T42

NUM_JED  xor  a
NUM_JED1 add  hl,de
         jr   nc,NUM_PRIC
         inc  a
         jr   NUM_JED1
NUM_PRIC sbc  hl,de
         add  a,48
         push bc
         push hl
         call T42
         pop  hl
         pop  bc
         inc  c
         ret

T42_TEXT ld   a,(hl)
         and  127
         push hl
         push bc
         call T42
         pop  bc
         pop  hl
         inc  c
         ld   a,(hl)
         rla
         inc  hl
         jr   nc,T42_TEXT
         ret

;Tisk 42 znaku na radek
;pocatek vlevo nahore (0,0)

T42      ld   de,T42_SADA-256
         ld   h,0
         ld   l,a
         add  hl,hl
         add  hl,hl
         add  hl,hl
         add  hl,de
         ld   a,b
         rrca
         rrca
         rrca
         and  %11100000
         ld   e,a
         ld   a,b
         and  %00011000
         or   %01000000
         ld   d,a
         ld   a,c
         and  %00111100
         rrca
         rrca
         ld   b,a
         ld   a,c
         and  %00111100
         sub  b
         add  a,e
         ld   e,a
         ld   a,c
         and  %00000011
         ld   b,8
         jr   nz,T42_T123
T42_T0   ld   a,(de)
         and  %00000011
         or   (hl)
         ld   (de),a
         inc  d
         inc  hl
         djnz T42_T0
         ret

T42_T123 cp   2
         jr   c,T42_T1
         jr   z,T42_T2
T42_T3   inc  e
         inc  e
T42_T31  ld   a,(de)
         and  %11000000
         ld   c,a
         ld   a,(hl)
         rrca
         rrca
         or   c
         ld   (de),a
         inc  d
         inc  hl
         djnz T42_T31
         ret

T42_T1   xor  a
         ld   (T42_P3),a
         ld   (T42_P4),a
         ld   a,%11111100
         ld   (T42_P1+1),a
         cpl
         call T42_P_A
         ld   a,%00001111
         ld   (T42_P1+1),a
         cpl
         jr   T42_P_B

T42_T2   inc  e
         ld   a,7
         ld   (T42_P3),a
         ld   (T42_P4),a
         ld   a,%11110000
         ld   (T42_P1+1),a
         cpl
         call T42_P_A
         ld   a,%00111111
         ld   (T42_P1+1),a
         cpl

T42_P_B  ld   b,8
T42_P_A  ld   (T42_P2+1),a
         push hl
         push de
T42_P0   ld   a,(de)
T42_P1   and  0
         ld   c,a
         ld   a,(hl)
         rlca
         rlca
T42_P3   nop
T42_P4   nop
T42_P2   and  0
         or   c
         ld   (de),a
         inc  d
         inc  hl
         djnz T42_P0
         pop  de
         pop  hl
         inc  e
         ret

         defb %11111100
         defb %10000100
         defb %10000100
         defb %10000100
         defb %10000100
         defb %10000100
         defb %10000100
         defb %11111100

         defb %00000000
         defb %01111000
         defb %01111000
         defb %01111000
         defb %01111000
         defb %01111000
         defb %01111000
         defb %00000000

T42_SADA defw 0,0,0,0
         defw 35064,20560
         defw 32,32,53456,0,0,0
         defw 63568,20560,63568
         defw 80,63520,63648
         defw 63528,32,51200
         defw 12504,55392,152
         defw 8192,8272,34896
         defw 112,24624,0,0,0
         defw 24624
         defw 24672
         defw 24672
         defw 48
         defw 12384
         defw 12336
         defw 12336
         defw 96
         defw 20480
		 defw 63520
         defw 20512
         defw 0
         defw 8192
         defw 63520
         defw 8224
         defw 0
         defw 0
         defw 0
         defw 12288
         defw 96
         defw 0
         defw 30720
         defw 0
         defw 0
         defw 0
         defw 0
         defw 24576
         defw 96
         defw 2048
         defw 12312
         defw 49248
         defw 128
         defw 55408
         defw 51432
         defw 51400
         defw 112
         defw 24608
         defw 24800
         defw 24672
         defw 240
         defw 34928
         defw 28680
         defw 49344
         defw 248
         defw 51312
         defw 12296
         defw 51208
         defw 112
         defw 8208
         defw 53312
         defw 4344
         defw 16
         defw 49400
         defw 61632
         defw 51208
         defw 112
         defw 51312
         defw 61632
         defw 51400
         defw 112
         defw 6392
         defw 12312
         defw 49248
         defw 128
         defw 51312
         defw 28872
         defw 51400
         defw 112
         defw 51312
         defw 30920
         defw 51208
         defw 112
         defw 0
         defw 96
         defw 24576
         defw 0
         defw 0
         defw 48
         defw 12288
         defw 96
         defw 6144
         defw 24624
         defw 6192
         defw 0
         defw 0
         defw 120
         defw 120
         defw 0
         defw 24576
         defw 6192
         defw 24624
         defw 0
         defw 55408
         defw 12312
         defw 32
         defw 32
         defw 34928
         defw 55464
         defw 32944
         defw 112
         defw 51312
         defw 63688
         defw 51400
         defw 200
         defw 51440
         defw 61640
         defw 51400
         defw 240
         defw 51312
         defw 49344
         defw 51392
         defw 112
         defw 51440
         defw 51400
         defw 51400
         defw 240
         defw 49400
         defw 61632
         defw 49344
         defw 248
         defw 49400
         defw 61632
         defw 49344
         defw 192
         defw 51312
         defw 55488
         defw 51400
         defw 112
         defw 51400
         defw 63688
         defw 51400
         defw 200
         defw 24824
         defw 24672
         defw 24672
         defw 248
         defw 2056
         defw 2056
         defw 51400
         defw 112
         defw 51400
         defw 57552
         defw 51408
         defw 200
         defw 49344
         defw 49344
         defw 49344
         defw 248
         defw 55432
         defw 51432
         defw 51400
         defw 200
         defw 51400
         defw 59592
         defw 51416
         defw 200
         defw 51312
         defw 51400
         defw 51400
         defw 112
         defw 51440
         defw 61640
         defw 49344
         defw 192
         defw 51312
         defw 51400
         defw 55528
         defw 120
         defw 51440
         defw 61640
         defw 51408
         defw 200
         defw 51312
         defw 28864
         defw 51208
         defw 112
         defw 24824
         defw 24672
         defw 24672
         defw 96
         defw 51400
         defw 51400
         defw 51400
         defw 112
         defw 51400
         defw 51400
         defw 20680
         defw 32
         defw 51400
         defw 51400
         defw 59592
         defw 80
         defw 55432
         defw 24688
         defw 55408
         defw 136
         defw 53384
         defw 24672
         defw 24672
         defw 96
         defw 6392
         defw 24624
         defw 49344
         defw 248
         defw 24696
         defw 24672
         defw 24672
         defw 120
         defw 32768
         defw 24768
         defw 6192
         defw 8
         defw 6264
         defw 6168
         defw 6168
         defw 120
         defw 28704
         defw 8360
         defw 8224
         defw 32
         defw 0
         defw 0
         defw 0
         defw 252
         defw 18480
         defw 57416
         defw 16448
         defw 248
         defw 0
         defw 2160
         defw 51320
         defw 120
         defw 49152
         defw 61632
         defw 51400
         defw 240
         defw 0
         defw 49264
         defw 49344
         defw 112
         defw 2048
         defw 30728
         defw 51400
         defw 120
         defw 0
         defw 51312
         defw 49392
         defw 120
         defw 14336
         defw 28768
         defw 24672
         defw 96
         defw 0
         defw 51320
         defw 30920
         defw 28680
         defw 49152
         defw 61632
         defw 51400
         defw 200
         defw 24576
         defw 57344
         defw 24672
         defw 240
         defw 12288
         defw 12288
         defw 12336
         defw 24752
         defw 49152
         defw 57552
         defw 53472
         defw 200
         defw 24576
         defw 24672
         defw 24672
         defw 56
         defw 0
         defw 59600
         defw 59624
         defw 232
         defw 0
         defw 51440
         defw 51400
         defw 200
         defw 0
         defw 51312
         defw 51400
         defw 112
         defw 0
         defw 51440
         defw 61640
         defw 49344
         defw 0
         defw 51320
         defw 30920
         defw 6168
         defw 0
         defw 49272
         defw 49344
         defw 192
         defw 0
         defw 49264
         defw 2160
         defw 240
         defw 24576
         defw 24688
         defw 24672
         defw 56
         defw 0
         defw 51400
         defw 51400
         defw 112
         defw 0
         defw 51400
         defw 28784
         defw 32
         defw 0
         defw 59592
         defw 59624
         defw 80
         defw 0
         defw 55432
         defw 55408
         defw 136
         defw 0
         defw 51400
         defw 30920
         defw 28680
         defw 0
         defw 12536
         defw 49248
         defw 248
         defw 24696
         defw 49248
         defw 24672
         defw 120
         defw 24672
         defw 24672
         defw 24672
         defw 96
         defw 12528
         defw 6192
         defw 12336
         defw 240
         defw 26676
         defw 0
         defw 0
         defw 0
         defw 34928
         defw 51368
         defw 34984
         defw 112
;------------------------------
ANYKEY   call IINKEY
         jr   z,ANYKEY
         push af
ANYKEY_0 call IINKEY
         jr   nz,ANYKEY_0
         pop  af
         ret
;------------------------------
IINKEY   push hl
         push de
         push bc
         ld   bc,#7FFE
         ld   h,0
         ld   d,h
         ld   e,h
II1      ld   l,5
         in   a,(c)
II2      inc  h
         rrca
         jr   c,II3
         ld   d,e
         ld   e,h
II3      dec  l
         jr   nz,II2
         rrc  b
         jr   c,II1
         ld   a,e
         cp   #24
         jr   nz,II5
         ld   e,d
         ld   d,#24
II5      cp   2
         jr   nz,II6
         ld   e,d
         ld   d,2
II6      ld   hl,IINN
         xor  a
         xor  d
         jr   z,II7
         ld   hl,IISS
         cp   2
         jr   z,II7
         ld   hl,IICS
         cp   #24
         jr   z,II7
         ld   a,1
         jr   II8

II7      ld   d,0
         add  hl,de
         ld   a,(hl)
II8      and  a
         pop  bc
         pop  de
         pop  hl
         ret

IINN     defb 0," ",#1C
         defb "mnb"
         defb 13
         defb "lkjh"
         defb "poiuy"
         defb "09876"
         defb "12345"
         defb "qwert"
         defb "asdfg"
         defb 0
         defb "zxcv"

IICS     defb 0,#11,#0E
         defb "MNB"
         defb 2
         defb "LKJH"
         defb "POIUY"
         defb #0C,#0F,9,#0B,#0A
         defb 7,6,4,5,8
         defb "QWERT"
         defb "ASDFG"
         defb #1F
         defb "ZXCV"

IISS     defb 0,16,#1E
         defb ".,*"
         defb 3
         defb "=+-^"
         defb 34 ;"
         defb ";}{"
         defb "_)('&"
         defb "!@#$%"
         defb #12,#13,#14
         defb "<>"
         defb "~|"
         defb 92 ;\
         defb 123 ;{
         defb 125 ;}
         defb #1D
         defb ":`?/"  
;------------------------------  
ROM0
        push af
        xor a
        out (#27),a      ;high byte of Page in Area0 #0000-#1FFF
        out (#67),a      ;high byte of Page in Area1
        out (#07),a
        inc a            ;page 1+ Area1
        out (#47),a
        pop af
        ret
ROM1
        push af
        xor a
        out (#27),a      ;high byte of Page in Area0 #0000-#1FFF
        out (#67),a      ;high byte of Page in Area1
        ld a,#02
        out (#07),a
        inc a            ;page 1+ Area1
        out (#47),a
        pop af
        ret      
PAGEX     
        push af
        xor a
        out (#27),a      ;high byte of Page in Area0 #0000-#1FFF
        out (#67),a      ;high byte of Page in Area1
BLOCK   ld a,#02
        out (#07),a
        inc a            ;page 1+ Area1
        out (#47),a
        pop af
        ret             
;------------------------------
TEXT1    dc "FLASH - eLeMeNt ZX v2"
TEXT2    db 127
         dc " LMN128/Jan Kucera/Zlin/CZ"
TEXT3    dc "Select 16KB block by key 0-7:"
TEXT4    dc "Programming...."
TEXT5    dc "Programming OK!"
TEXT6    dc "Verifying...."
TEXT7    dc "Verifying ERROR! Number of errors:"
TEXT8    dc "Press any key to finish."
TEXT9    dc "Verifying OK!"
TEXT10   dc "  Block:"
TEXT11   dc "Erasing......"
//TEXT12   dc "Set FLASH area by DIP7&8 on the back!"
TEXT13   dc "and press any key"
TEXT14   dc "Select Flash Area by key 0-3:"
TEXT15   dc "  Area:"
FW1		 db "v:"
DATE			
	LUA ALLPASS
	_pc('db	"' .. os.date("%Y%m%d") .. '"') 
	ENDLUA
	     dc " " 

endramcode		

moveend1
/*			
	BLOCK   (32768-moveend1),0	
	org 32768
	INCBIN boot.cod
*/	
CODE	=	#AF
USR	=	#C0
LOAD	=	#EF
CLEAR	=	#FD
RANDOMIZE =	#F9
		
	org	#5C00		;; Basic loader
baszac	db	0,1			;; Line number
	dw	linlen			;; Line length
linzac
	db	CLEAR,'8',#0E,0,0
	dw	maincode-1
	db	0,':'
	db	LOAD,'""',CODE,':'
	db	RANDOMIZE,USR,'8',#0E,0,0
	dw	maincode
	db	0,#0D
linlen	=	$-linzac
baslen	=	$-baszac
	

	EMPTYTAP "flash6.tap"
	SAVETAP  "flash6.tap" , BASIC , Flash6 ,baszac,baslen,1
	SAVETAP  "flash6.tap",CODE,"flash6",maincode,endramcode-maincode,maincode
	SAVESNA  "flash6.sna",start